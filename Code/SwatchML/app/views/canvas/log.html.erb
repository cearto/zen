<script>
var data = <%= @data %>;
var scale = 0.5;
$(function(){
	renderData();

});


function featureVector(rect, outer, inner){
   this.rect = rect;
   this.outer = outer;
   this.inner = inner;
}
function HSL(h,s,l){
	this.H = h;
	this.S = s;
	this.L = l;
}
HSL.prototype.toString = function(){
		return "hsl("+this.H+","+this.S+"%,"+this.L+"%)";
}

function renderData(){
	if(data.length == 0){
		$('body').append($('<h1> No records found </h1>'));
	}
	var w = null;
	var fv = null;
	var canvas = null;
	for(var i in data){
		w = data[i];
		inner = new HSL(w.innerH, w.innerS, w.innerL);
		outer = new HSL(w.outerH, w.outerS, w.outerL);
		rect = new HSL(w.rectH, w.rectS, w.rectL);
		fv = new featureVector(rect, outer, inner);
		canvas = $('<canvas width='+ (400 * scale) + ' height='+ (400 * scale) +'/>').attr('id', 'c' + w.id);
		$('body').append(canvas);
		render(canvas, fv);
	}
}
function render(canvas, featureVector){
	console.log("Rendered:");
	console.log(JSON.stringify(featureVector));
	console.log(featureVector.rect.toString());
	canvas.drawRect({
	  fillStyle: featureVector.rect.toString(),
	  x: 200 * scale, y: 200 * scale,
	  width: 400 * scale,
	  height: 400 * scale,
	  fromCenter: true
	});
	
	canvas.drawArc({
	  fillStyle: featureVector.outer.toString(),
	  x: 200 * scale, y: 200 * scale,
	  radius: 180 * scale,
	  fromCenter: true
	});

	canvas.drawArc({
	  fillStyle: featureVector.inner.toString(),
	  x: 200 * scale, y: 200 * scale,
	  radius: 100 * scale,
	  fromCenter: true
	});
}

</script>